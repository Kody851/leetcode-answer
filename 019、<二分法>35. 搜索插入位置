https://leetcode-cn.com/problems/search-insert-position/description/
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。
你可以假设数组中无重复元素。
示例 1:
输入: [1,3,5,6], 5
输出: 2

我 ：二分法
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int len=nums.size();
        int left=0,right=len-1;
        while(left<=right){
            int mid=(left+right)/2;
            int val=nums[mid];
            if(val==target) return mid;
            else if(val<target) left=mid+1;
            else right=mid-1;
        }
        return left;//没找到，此时left比right大1，索引应该是大的那个，即left。
    }
};

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int len=nums.size();
        int i=0,j=len-1;
        while(i<=j){//i=j时对应了最中间的数
            int m=(i+j)/2;
            if(nums[m]==target) return m;
            else if(nums[m]<target) i=m+1;
            else j=m-1;
        }
        return i;//都找不到时，i刚刚比j大
    }
};
