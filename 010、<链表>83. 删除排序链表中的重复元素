中文：https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/description/
原版：https://leetcode.com/problems/remove-duplicates-from-sorted-list/solution/
答案：LeetCode(83)Remove Duplicates from Sorted List - CSDN博客 https://blog.csdn.net/feliciafay/article/details/18072359
 
给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。
示例 1:
输入: 1->1->2
输出: 1->2
示例 2:
输入: 1->1->2->3->3
输出: 1->2->3

解答错误:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head||!head->next) return head;
        ListNode* p=head;
        ListNode* q=head->next;
        while(q!=NULL){
            if(p->val==q->val){
                q=q->next;
            }
            else{
                //p->next=q;
                p=q;
                q=q->next;
            }
        }
        p->next=NULL; 
        return head;
    }
};
输入：
[1,1,2]
输出：
[1,1,2]
预期：
[1,2]

修改后 :
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* current=head;//用一个就很清晰！越简单越好！
        while(current!=NULL&&current->next!=NULL){
            if(current->val==current->next->val){
                current->next=current->next->next;
            }
            else{
                current=current->next;
            }
        }
        return head;
    }
};
 
