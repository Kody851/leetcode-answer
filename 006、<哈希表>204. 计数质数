Count Primes
中文：https://leetcode-cn.com/problems/count-primes/description/
[LeetCode-204] Count Primes（0~n 有多少个质数—4种方法求解） - CSDN博客 https://blog.csdn.net/xy010902100449/article/details/49361263

1、
class Solution {
public:
    int countPrimes(int n) {
        if(n<=2) return 0;
        int count=0;
        for(int i=2;i<n;i++){
            if(isPrime(i)) count++;
        }
        return count;       
    }

private:    
    bool isPrime(int x){
        if(x<2) return false;
        if(x==2) return true;
    
        int num=0;
        for(int i=2;i*i<=x;i++){
            if(x%i==0) return false;
        }
        return true;
    }
};
时间复杂度O（n^1.5）
思路:As you can see, calculations of 4 × 3 and 6 × 2 are not necessary. Therefore, we only need to consider factors up to √n 
because, if n is divisible by some number p, then n = p × q and since p ≤ q, we could derive that p ≤ √n.

2、取余（模）运算
x%y即可

3、i*i<=x  或使用i<=sqrt(x)  可直接通过； 
若要在CLion中通过，需要#include<math.h>
 
4、若要输出，直接：printf("%d",count);
或：cout<<count<<endl;   此前需要加 #include<iostream>  using namespace std;
