516. Longest Palindromic Subsequence
https://leetcode-cn.com/problems/longest-palindromic-subsequence/description/
博客：https://www.cnblogs.com/grandyang/p/6493182.html?utm_source=itdadao&utm_medium=referral
https://blog.csdn.net/xiaocong1990/article/details/54976319
给定一个字符串s，找到其中最长的回文子序列。可以假设s的最大长度为1000。
示例 1:
输入:
"bbbab"
输出:
4
一个可能的最长回文子序列为 "bbbb"。
示例 2:
输入:
"cbbd"
输出:
2
一个可能的最长回文子序列为 "bb"。
class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int n=s.size();
        vector<vector<int>> dp(n,vector<int>(n));//学习二维数组的初始化，及vector<vector<int>> dp(n,vector<int>(n，0))
        for(int i=n-1;i>=0;i--){
            dp[i][i] = 1;//需定义这种情况
            for(int j=i+1;j<n;j++){
                if(s[i]==s[j]) dp[i][j]=dp[i+1][j-1]+2;
                else dp[i][j]=max(dp[i+1][j],dp[i][j-1]);
            }
        }
        return dp[0][n-1];
    }
};
leetcode5. 最长回文子串 https://leetcode-cn.com/problems/longest-palindromic-substring/
扩展：最长回文子串https://www.jianshu.com/p/c82cada7e5b0
给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。
示例 1：
输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。

class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.size();
        if(n==0) return s;
        bool dp[n][n];
        memset(dp,0,sizeof(dp));
        int max=0,index=0;
        for(int j=0;j<n;j++){
            for(int i=0;i<=j;i++){
                if(i==j) dp[i][j]=true;
                else if(j-i==1) dp[i][j]=s[i]==s[j];
                else{
                    dp[i][j]=(dp[i+1][j-1]&&s[i]==s[j]);
                }
                if(dp[i][j]&&j-i+1>max){
                    max=j-i+1;
                    index=i;
                }
            }
        }
        return s.substr(index,max);
    }
};
