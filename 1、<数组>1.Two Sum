原题 ：https://leetcode.com/problems/two-sum/solution/
中文版 ：https://leetcode-cn.com/problems/two-sum/description/
1、<数组>Two Sum  
（1）哈希表：
定义 Map<Integer, Integer> map = new HashMap<>();
新增元素 map.put(nums[i], i);
判断是否存在 map.containsKey(complement)
取索引值 map.get(complement)


（2）vector（https://blog.csdn.net/afishhhhhh/article/details/79980359）
创建一维vector：
vector<int> nums;//不指定长度
vector<int> nums(n); // 指定长度为n 

添加元素
nums.push_back(1);//直接从数组末端添加
nums[i] = 1;//直接赋值给第i个位置

删除元素
nums.resize(nums.size-i); //直接将数组长度减小，某种方式上删掉了后面i个
nums.pop_back();//删掉最后一个元素

数组遍历
for(int i = 0; i < nums.size(); i++){
    cout<<nums[i]<<endl;
}

获得长度：nums.size() 
排序(O(nlogn))：sort(nums.begin(),nums.end()); 
翻转：reverse(nums.begin(), nums.end()); 
合并两个vector：合并nums1和nums2，并将合并后的数组赋值给nums
vector<int> nums1(m),nums2(n);
vector<int> nums;
nums.resize(m+n);
merge(nums1.begin(), nums1.end(),nums2.begin(),nums2.end(),nums);

二维vector
vector<vector <int> > nums(m ,vector<int>(n));    //m*n的二维vector
